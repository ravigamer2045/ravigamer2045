-- Módulo de movimentação do personagem
local Movimentacao = {}

-- Inicializa a posição do personagem
function Movimentacao.inicializar(x, y)
    Movimentacao.posicaoX, Movimentacao.posicaoY = x, y
end

-- Move o personagem para uma nova posição
function Movimentacao.mover(novoX, novoY)
    Movimentacao.posicaoX, Movimentacao.posicaoY = novoX, novoY
    print("Personagem movido para: (" .. novoX .. ", " .. novoY .. ")")
end

-- Módulo de visão do personagem
local Visao = {}

-- Inicializa o raio do campo de visão
function Visao.inicializar(raio)
    Visao.raioFOV = raio
end

-- Verifica se um ponto está dentro do campo de visão
function Visao.estaDentroDoFOV(x, y)
    local distancia = math.sqrt((x - Movimentacao.posicaoX)^2 + (y - Movimentacao.posicaoY)^2)
    return distancia <= Visao.raioFOV
end

-- Módulo de inimigos
local Inimigos = {}

-- Inicializa a lista de inimigos
function Inimigos.inicializar(lista)
    Inimigos.lista = lista
end

-- Encontra o inimigo mais próximo
function Inimigos.encontrarMaisProximo()
    local menorDistancia = math.huge
    local inimigoMaisProximo = nil

    for _, inimigo in ipairs(Inimigos.lista) do
        local distancia = math.sqrt((inimigo.x - Movimentacao.posicaoX)^2 + (inimigo.y - Movimentacao.posicaoY)^2)
        if distancia < menorDistancia then
            menorDistancia = distancia
            inimigoMaisProximo = inimigo
        end
    end

    return inimigoMaisProximo
end

-- Ajusta a mira para o inimigo mais próximo
function Inimigos.ajustarMira()
    local inimigo = Inimigos.encontrarMaisProximo()
    if inimigo then
        print("Mira ajustada para o inimigo na posição: (" .. inimigo.x .. ", " .. inimigo.y .. ")")
    else
        print("Nenhum inimigo encontrado.")
    end
end

-- Exemplo de uso
Movimentacao.inicializar(0, 0)
Visao.inicializar(100)
Inimigos.inicializar({
    {x = 50, y = 50},
    {x = 80, y = 20},
    {x = 30, y = 90}
})

local pontoX, pontoY = 50, 50
if Visao.estaDentroDoFOV(pontoX, pontoY) then
    print("O ponto (" .. pontoX .. ", " .. pontoY .. ") está dentro do FOV.")
else
    print("O ponto (" .. pontoX .. ", " .. pontoY .. ") está fora do FOV.")
end

Movimentacao.mover(30, 30)
if Visao.estaDentroDoFOV(pontoX, pontoY) then
    print("O ponto (" .. pontoX .. ", " .. pontoY .. ") está dentro do FOV.")
else
    print("O ponto (" .. pontoX .. ", " .. pontoY .. ") está fora do FOV.")
end

Inimigos.ajustarMira()
